---
- name: Configure Host for Kubernetes and Docker
  hosts: all
  become: yes
  tasks:

    - name: Set hostname using the inventory name
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"

    - name: Update the apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Upgrade and autoremove packages
      ansible.builtin.apt:
        upgrade: dist
        autoremove: yes

    - name: Install dependencies
      ansible.builtin.apt:
        name:
          - curl
          - apt-transport-https
          - vim
          - git
          - wget
          - software-properties-common
          - lsb-release
          - ca-certificates
          - socat
        state: present

    - name: Disable swap temporarily
      ansible.builtin.command:
        cmd: swapoff -a

    - name: Ensure swap is disabled in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^(.*swap.*)$'
        replace: '# \1'

    - name: Load necessary kernel modules
      ansible.builtin.command:
        cmd: modprobe {{ item }}
      loop:
        - overlay
        - br_netfilter

    - name: Configure sysctl parameters for Kubernetes
      ansible.builtin.blockinfile:
        path: /etc/sysctl.d/kubernetes.conf
        block: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
        create: yes

    - name: Apply sysctl settings
      ansible.builtin.sysctl:
        reload: yes

    - name: Add Docker GPG key
      ansible.builtin.shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg

    - name: Add Docker repository
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
        state: present

    - name: Update the apt cache after adding Docker repository
      ansible.builtin.apt:
        update_cache: yes

    - name: Install containerd.io
      ansible.builtin.apt:
        name: containerd.io
        state: present

    - name: Generate default containerd configuration
      ansible.builtin.command:
        cmd: containerd config default
      register: containerd_config

    - name: Write containerd configuration
      ansible.builtin.copy:
        dest: /etc/containerd/config.toml
        content: "{{ containerd_config.stdout }}"
        force: yes

    - name: Update containerd configuration to use systemd cgroup
      ansible.builtin.lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^SystemdCgroup = false'
        line: 'SystemdCgroup = true'

    - name: Restart and enable containerd
      ansible.builtin.systemd:
        name: containerd
        state: restarted
        enabled: yes
